# TERM TOOLS

This repository contains my terminal config and plugins, mostly focused around
zsh and vim.  Most of this repository is pieced together from existing
configurations and hard work by other programmers.  Many thanks to those who
released their scripts!

## SREENSHOTS

#### Using `vim`
![](https://github.com/seanbell/term-tools/blob/master/screenshots/screen1.png?raw=true)

#### Using `zsh`
![](https://github.com/seanbell/term-tools/blob/master/screenshots/screen2.png?raw=true)

## FEATURES
 * Installs and configures `solarized`, `zsh`, `oh-my-zsh`
 * Syntax highlighting in `less`
 * Autocomplete in Python shell
 * Shortcuts for `git`
 * Improved `~/.vimrc` key mappings
 * Packages the best Vim plugins: `ack` `autopep8` `closetag` `coffee-script`
   `ctrlp` `django-support` `easymotion` `fswitch` `fugitive` `gitignore`
   `gundo` `hugefile` `javascript` `jedi` `latex` `less` `matchit`
   `nerdcommenter` `nerdtree` `powerline` `rainbow-parentheses` `seek`
   `showmarks` `signify` `solarized` `startify` `supertab` `surround`
   `syntastic` `tabman` `tagbar` `vimux` `vimux-pyutils` `yankstack`
 * Custom vim scripts: improved text-wrapping with `Q`,
   delete-trailing-whitespace, render python `lambda` as `Î»`, other things I
   forget
 * Smart `ls` after `cd`: if `ls` takes more than 1 second to respond, it is
   suppressed
 * More things I can't think of

## INSTALLATION INSTRUCTIONS

These instructions are for Ubuntu, but they can be easily adapted for OSX.  I
have `term-tools` working on both OSX and Ubuntu.

0. Checkout term-tools:
   <pre>cd $HOME; git clone git://github.com/seanbell/term-tools.git</pre>

   If you want to install these elsewhere, you need to search the scripts for
   `~/term-tools` and change them to the new location (sorry).

1. Install patched Ubuntu fonts for the `powerline` plugin.  Open
   `ubuntu-font-family-0.80/` using the file manager, open each of
   `UbuntuMono-*-Powerline.ttf` and click install.

2. Backup and delete (aka `mv`) your `~/.zshrc`, `~/.vimrc`, `~/.gvimrc`,
   `~/.vim`, and `~/.tmux.conf` files if you have them.

3. Install everything with `./install.sh`.  You shouldn't need to run it with
   `sudo`, though the script will make calls to `sudo` internally.  It will ask
   whether each component should be installed.  Run with `-f` to overwrite any
   existing config you may have.

4. Make sure that this is added to the end of your `~/.bashrc` and `~/.zshrc`:
   <pre>[[ -s ~/term-tools/config/shrc.sh ]] && source ~/term-tools/config/shrc.sh</pre>

5. Create a Gnome Terminal profile "solarized", run the installer
   (`installer.sh`) in `gnome-terminal-colors-solarized`, and then make
   "solarized" the default Gnome Terminal profile.  In that profile, make the
   font `Ubuntu Mono for Powerline 13`.

6. Suggested: remap caps lock to escape -- open "keyboard layout" from the
   Ubuntu menu (super key) choose "options..." then "Caps lock key behavior".
   Select "make caps lock an additional escape".  This is probably the single
   best improvement I've done to my workflow.

## REMOTE SERVER INSTALL

If on a remote server, you can use this to more quickly run the installer:

	wget --no-check-certificate https://raw.github.com/seanbell/term-tools/master/install.sh -O - | bash

This will clone the repository to `~/term-tools` and then run the installer

## USAGE

The Vim commands are detailed in `~/.vimrc`

## SOLUTIONS TO POSSIBLE ISSUES

 * Typing is slow in large directories -- `zsh-syntax-highlighting` looks at
   files in the current directory, so the whole terminal becomes slow if `ls`
   is slow.  If this is an issue for you, remove `zsh-syntax-highlighting` from
   the line `plugins=( ... )` in `~/.zshrc`.

 * The terminal uses the same keybindings as the `EDITOR` variable (defaults to
   `vim` if not set).  To use a different set of keybindings (e.g. `emacs`
   inside the shell but `vim` as the `EDITOR`), add this to your `~/.zshrc` and
   `~/.bashrc` (must be before the line that sources `~/term-tools/config/shrc.sh`):
	<pre>
	export EDITOR="vim"
	export TERM_EDITOR="emacs"
	</pre>

 * Editing Python hangs sometimes, since jedi is a little buggy.  You can
   disable these features by entering paste mode (F2).

## INSTALLING VIM FROM SOURCE (UBUNTU ONLY)

The `installers/vim.sh` installer optionally installs vim from source on
Ubuntu.  It uses `checkinstall` which creates a fake Debian package to track
what was installed.  To uninstall, run `sudo dpkg -r vim`.
